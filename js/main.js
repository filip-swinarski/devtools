(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _render_dom = require('./modules/render_dom.js');

var _load_styles = require('./modules/load_styles.js');

/* main.js 0.1.0 27.03.2017 @ filip swinarski */

var body = document.body;
var level = 0;
var display = document.createElement('div');

display.classList.add('display');
display.id = 'display';
body.appendChild(display);
(0, _load_styles.loadStyles)();
(0, _render_dom.renderDOM)(body, display, level);

},{"./modules/load_styles.js":2,"./modules/render_dom.js":3}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/* load _styles.js v. 0.1.0 27.03.2017 @ filip-swinarski */

var loadStyles = function loadStyles() {

	var styles = document.createElement('link');

	styles.rel = 'stylesheet';
	styles.type = 'text/css';
	styles.media = 'screen';
	styles.href = './css/main.css';
	document.getElementsByTagName('head')[0].appendChild(styles);
};

exports.loadStyles = loadStyles;

},{}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/* render_dom.js, v. 0.1.0 @ filip-swinarski */

var renderDOM = function renderDOM(elem, parentEl, level) {

	if (elem.id === 'display') return;

	var wrapper = document.createElement('div');
	var row1 = document.createElement('div');
	var row2 = elem.children.length ? document.createElement('div') : document.createElement('span');

	wrapper.style.marginLeft = '20px';
	wrapper.classList.add('exp');
	row1.classList.add('row');
	row1.classList.add('opening');

	if (level < 2) row1.classList.add('expanded');

	row2.classList.add('row');
	row2.classList.add('closing');

	var row1ElementTypeSpan = document.createElement('span');
	var row1OpenArrow = document.createElement('span');
	var row1CloseArrow = document.createElement('span');
	var row2ElementTypeSpan = document.createElement('span');
	var row2OpenArrow = document.createElement('span');
	var row2CloseArrow = document.createElement('span');

	row1ElementTypeSpan.classList.add('tag-name');
	row2ElementTypeSpan.classList.add('tag-name');
	row1OpenArrow.innerText = '<';
	row1CloseArrow.innerText = '>';
	row1ElementTypeSpan.innerText = elem.localName;
	row1.appendChild(row1OpenArrow);
	row1.appendChild(row1ElementTypeSpan);

	if (elem.attributes.length) {
		[].slice.call(elem.attributes).forEach(function (attr) {

			var attrNameSpan = document.createElement('span');
			var attrEqualSpan = document.createElement('span');
			var attrValueSpan = document.createElement('span');

			attrNameSpan.classList.add('attr-name');
			attrValueSpan.classList.add('attr-value');
			attrNameSpan.innerText = ' ' + attr.localName;
			attrEqualSpan.innerText = '=';
			attrValueSpan.innerText = '"' + attr.value + '"';
			row1.appendChild(attrNameSpan);
			row1.appendChild(attrEqualSpan);
			row1.appendChild(attrValueSpan);
		});
	}

	row1.appendChild(row1CloseArrow);
	wrapper.appendChild(row1);

	if (elem.text && elem.text.length) {

		var textEl = document.createElement('div');

		textEl.style.marginLeft = '20px';
		textEl.innerText = elem.text.trim();
		wrapper.appendChild(textEl);
	}

	if (elem.children.length) level += 1;
	[].slice.call(elem.children).forEach(function (el) {
		renderDOM(el, wrapper, level);
	});

	row2OpenArrow.innerText = '</';
	row2CloseArrow.innerText = '>';
	row2ElementTypeSpan.innerText = elem.localName;
	row2.appendChild(row2OpenArrow);
	row2.appendChild(row2ElementTypeSpan);
	row2.appendChild(row2CloseArrow);

	if (elem.children.length) wrapper.appendChild(row2);else row1.appendChild(row2);

	row1.addEventListener('click', function (e) {
		e.preventDefault();
		row1.classList.toggle('expanded');
	}, false);

	parentEl.appendChild(wrapper);
};
exports.renderDOM = renderDOM;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
